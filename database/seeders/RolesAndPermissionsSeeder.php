<?php

namespace Database\Seeders;

use App\Models\User;
use Illuminate\Database\Seeder;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\Models\Role;

class RolesAndPermissionsSeeder extends Seeder
{
    public function run(): void
    {
        // Reset cached roles and permissions
        app()[\Spatie\Permission\PermissionRegistrar::class]->forgetCachedPermissions();

        // Create all permissions (these are generated by Filament Shield)
        $permissions = [
            // Blog permissions
            'view_blog',
            'view_any_blog',
            'create_blog',
            'update_blog',
            'delete_blog',
            'delete_any_blog',
            'force_delete_blog',
            'force_delete_any_blog',
            'restore_blog',
            'restore_any_blog',
            'replicate_blog',
            'reorder_blog',

            // Comment permissions
            'view_comment',
            'view_any_comment',
            'create_comment',
            'update_comment',
            'delete_comment',
            'delete_any_comment',
            'force_delete_comment',
            'force_delete_any_comment',
            'restore_comment',
            'restore_any_comment',
            'replicate_comment',
            'reorder_comment',

            // User permissions
            'view_user',
            'view_any_user',
            'create_user',
            'update_user',
            'delete_user',
            'delete_any_user',
            'force_delete_user',
            'force_delete_any_user',
            'restore_user',
            'restore_any_user',
            'replicate_user',
            'reorder_user',

            // Role permissions
            'view_role',
            'view_any_role',
            'create_role',
            'update_role',
            'delete_role',
            'delete_any_role',
            'force_delete_role',
            'force_delete_any_role',
            'restore_role',
            'restore_any_role',
            'replicate_role',
            'reorder_role',

            // Project permissions
            'view_project',
            'view_any_project',
            'create_project',
            'update_project',
            'delete_project',
            'delete_any_project',
            'force_delete_project',
            'force_delete_any_project',
            'restore_project',
            'restore_any_project',
            'replicate_project',
            'reorder_project',

            // Newsletter Content permissions
            'view_newsletter::content',
            'view_any_newsletter::content',
            'create_newsletter::content',
            'update_newsletter::content',
            'delete_newsletter::content',
            'delete_any_newsletter::content',
            'force_delete_newsletter::content',
            'force_delete_any_newsletter::content',
            'restore_newsletter::content',
            'restore_any_newsletter::content',
            'replicate_newsletter::content',
            'reorder_newsletter::content',

            // Newsletter Issue permissions
            'view_newsletter::issue',
            'view_any_newsletter::issue',
            'create_newsletter::issue',
            'update_newsletter::issue',
            'delete_newsletter::issue',
            'delete_any_newsletter::issue',
            'force_delete_newsletter::issue',
            'force_delete_any_newsletter::issue',
            'restore_newsletter::issue',
            'restore_any_newsletter::issue',
            'replicate_newsletter::issue',
            'reorder_newsletter::issue',

            // Subscriber permissions
            'view_subscriber',
            'view_any_subscriber',
            'create_subscriber',
            'update_subscriber',
            'delete_subscriber',
            'delete_any_subscriber',
            'force_delete_subscriber',
            'force_delete_any_subscriber',
            'restore_subscriber',
            'restore_any_subscriber',
            'replicate_subscriber',
            'reorder_subscriber',

            // Impact Metric permissions
            'view_impact::metric',
            'view_any_impact::metric',
            'create_impact::metric',
            'update_impact::metric',
            'delete_impact::metric',
            'delete_any_impact::metric',
            'force_delete_impact::metric',
            'force_delete_any_impact::metric',
            'restore_impact::metric',
            'restore_any_impact::metric',
            'replicate_impact::metric',
            'reorder_impact::metric',

            // Contact Submission permissions
            'view_contact::submission',
            'view_any_contact::submission',
            'create_contact::submission',
            'update_contact::submission',
            'delete_contact::submission',
            'delete_any_contact::submission',
            'force_delete_contact::submission',
            'force_delete_any_contact::submission',
            'restore_contact::submission',
            'restore_any_contact::submission',
            'replicate_contact::submission',
            'reorder_contact::submission',

            // Widget permissions
            'widget_BlogOverviewStats',
            'widget_EngagementStats',
            'widget_NewsletterIssueStats',
            'widget_ProjectOverviewStats',
            'widget_SubscriberStats',

            // Custom admin panel permissions
            'access_admin_panel',
            'manage_system_settings',
        ];

        // Create permissions if they don't exist
        foreach ($permissions as $permission) {
            Permission::firstOrCreate(['name' => $permission]);
        }

        // Create roles and assign permissions

        // 1. Super Admin - Full access to everything
        $superAdminRole = Role::firstOrCreate(['name' => 'super_admin']);
        $superAdminRole->syncPermissions(Permission::all());

        // 2. Admin - Almost full access, but can't manage super admins
        $adminRole = Role::firstOrCreate(['name' => 'admin']);
        $adminRole->syncPermissions([
            // Blog management
            'view_any_blog', 'view_blog', 'create_blog', 'update_blog', 'delete_blog', 'delete_any_blog',
            'restore_blog', 'restore_any_blog', 'replicate_blog', 'reorder_blog',

            // User management (limited)
            'view_any_user', 'view_user', 'create_user', 'update_user', 'delete_user',
            'restore_user', 'replicate_user',

            // Role management (limited)
            'view_any_role', 'view_role', 'create_role', 'update_role',

            // Comment management
            'view_any_comment', 'view_comment', 'create_comment', 'update_comment',
            'delete_comment', 'delete_any_comment', 'restore_comment', 'restore_any_comment',

            // Project management
            'view_any_project', 'view_project', 'create_project', 'update_project',
            'delete_project', 'delete_any_project', 'restore_project', 'restore_any_project',

            // Newsletter management
            'view_any_newsletter::content', 'view_newsletter::content', 'create_newsletter::content',
            'update_newsletter::content', 'delete_newsletter::content', 'delete_any_newsletter::content',
            'view_any_newsletter::issue', 'view_newsletter::issue', 'create_newsletter::issue',
            'update_newsletter::issue', 'delete_newsletter::issue', 'delete_any_newsletter::issue',

            // Subscriber management
            'view_any_subscriber', 'view_subscriber', 'create_subscriber', 'update_subscriber',
            'delete_subscriber', 'delete_any_subscriber',

            // Impact metrics
            'view_any_impact::metric', 'view_impact::metric', 'create_impact::metric',
            'update_impact::metric', 'delete_impact::metric', 'delete_any_impact::metric',

            // Contact submissions
            'view_any_contact::submission', 'view_contact::submission', 'update_contact::submission',
            'delete_contact::submission', 'delete_any_contact::submission',

            // All widgets
            'widget_BlogOverviewStats', 'widget_EngagementStats', 'widget_NewsletterIssueStats',
            'widget_ProjectOverviewStats', 'widget_SubscriberStats',

            // System access
            'access_admin_panel', 'manage_system_settings',
        ]);

        // 3. Content Manager - Manages content and newsletters
        $contentManagerRole = Role::firstOrCreate(['name' => 'content_manager']);
        $contentManagerRole->syncPermissions([
            // Blog management
            'view_any_blog', 'view_blog', 'create_blog', 'update_blog', 'delete_blog',
            'restore_blog', 'replicate_blog', 'reorder_blog',

            // Comment moderation
            'view_any_comment', 'view_comment', 'create_comment', 'update_comment',
            'delete_comment', 'delete_any_comment',

            // Newsletter management
            'view_any_newsletter::content', 'view_newsletter::content', 'create_newsletter::content',
            'update_newsletter::content', 'delete_newsletter::content',
            'view_any_newsletter::issue', 'view_newsletter::issue', 'create_newsletter::issue',
            'update_newsletter::issue', 'delete_newsletter::issue',

            // Limited user viewing
            'view_any_user', 'view_user',

            // Subscriber management
            'view_any_subscriber', 'view_subscriber', 'create_subscriber', 'update_subscriber',

            // Contact submissions (view only)
            'view_any_contact::submission', 'view_contact::submission',

            // Relevant widgets
            'widget_BlogOverviewStats', 'widget_EngagementStats', 'widget_NewsletterIssueStats',
            'widget_SubscriberStats',

            // System access
            'access_admin_panel',
        ]);

        // 4. Editor - Content creation and editing
        $editorRole = Role::firstOrCreate(['name' => 'editor']);
        $editorRole->syncPermissions([
            // Blog management (limited)
            'view_any_blog', 'view_blog', 'create_blog', 'update_blog', 'replicate_blog',

            // Comment management
            'view_any_comment', 'view_comment', 'create_comment', 'update_comment', 'delete_comment',

            // Newsletter content (limited)
            'view_any_newsletter::content', 'view_newsletter::content', 'create_newsletter::content',
            'update_newsletter::content',
            'view_any_newsletter::issue', 'view_newsletter::issue',

            // Limited user viewing
            'view_any_user', 'view_user',

            // Relevant widgets
            'widget_BlogOverviewStats', 'widget_EngagementStats',

            // System access
            'access_admin_panel',
        ]);

        // 5. Project Manager - Manages projects and impact metrics
        $projectManagerRole = Role::firstOrCreate(['name' => 'project_manager']);
        $projectManagerRole->syncPermissions([
            // Project management
            'view_any_project', 'view_project', 'create_project', 'update_project',
            'delete_project', 'restore_project', 'replicate_project',

            // Impact metrics
            'view_any_impact::metric', 'view_impact::metric', 'create_impact::metric',
            'update_impact::metric', 'delete_impact::metric',

            // Limited blog viewing
            'view_any_blog', 'view_blog',

            // Limited user viewing
            'view_any_user', 'view_user',

            // Contact submissions (view only)
            'view_any_contact::submission', 'view_contact::submission',

            // Relevant widgets
            'widget_ProjectOverviewStats', 'widget_BlogOverviewStats',

            // System access
            'access_admin_panel',
        ]);

        // 6. Subscriber Manager - Manages subscribers and newsletters
        $subscriberManagerRole = Role::firstOrCreate(['name' => 'subscriber_manager']);
        $subscriberManagerRole->syncPermissions([
            // Subscriber management
            'view_any_subscriber', 'view_subscriber', 'create_subscriber', 'update_subscriber',
            'delete_subscriber', 'restore_subscriber',

            // Newsletter management
            'view_any_newsletter::content', 'view_newsletter::content', 'create_newsletter::content',
            'view_any_newsletter::issue', 'view_newsletter::issue', 'create_newsletter::issue',
            'update_newsletter::issue',

            // Contact submissions
            'view_any_contact::submission', 'view_contact::submission', 'update_contact::submission',

            // Limited user viewing
            'view_any_user', 'view_user',

            // Relevant widgets
            'widget_SubscriberStats', 'widget_NewsletterIssueStats',

            // System access
            'access_admin_panel',
        ]);

        // 7. Viewer - Read-only access
        $viewerRole = Role::firstOrCreate(['name' => 'viewer']);
        $viewerRole->syncPermissions([
            // View-only permissions
            'view_any_blog', 'view_blog',
            'view_any_comment', 'view_comment',
            'view_any_project', 'view_project',
            'view_any_newsletter::content', 'view_newsletter::content',
            'view_any_newsletter::issue', 'view_newsletter::issue',
            'view_any_subscriber', 'view_subscriber',
            'view_any_impact::metric', 'view_impact::metric',
            'view_any_contact::submission', 'view_contact::submission',
            'view_any_user', 'view_user',

            // All widgets (read-only)
            'widget_BlogOverviewStats', 'widget_EngagementStats', 'widget_NewsletterIssueStats',
            'widget_ProjectOverviewStats', 'widget_SubscriberStats',

            // System access
            'access_admin_panel',
        ]);

        // Assign super_admin role to the first user if exists
        $admin = User::whereEmail('admin@example.com')->first();
        if ($admin) {
            $admin->assignRole('super_admin');
        }

        // If no admin user exists, assign super_admin to the first user
        if (!$admin) {
            $firstUser = User::first();
            if ($firstUser) {
                $firstUser->assignRole('super_admin');
            }
        }

        $this->command->info('Enhanced roles and permissions seeded successfully!');
        $this->command->info('Created roles: super_admin, admin, content_manager, editor, project_manager, subscriber_manager, viewer');
        $this->command->info('Total permissions created: ' . count($permissions));
    }
}
